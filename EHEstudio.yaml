esphome:
  name: eh_estudio
  platform: ESP8266
  board: nodemcu
  # Use a local copy of ESPHome
  includes:
    #- ac_coolix.h
    - ape.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

api:
  
ota:

i2c:

logger:  
  level: DEBUG

# # Example configuration entry
# remote_transmitter:
#   id: ir_sender
#   pin: D5 #GPIO14
#   carrier_duty_percent: 50%

# # Individual switches
# switch:
#   - platform: remote_transmitter
#     name: "Panasonic TV Off"
#     panasonic:
#       address: 0x4004
#       command: 0x100BCBD
      
#   - platform: remote_transmitter
#     name: "Estudio 25 cool"
#     raw:
#       carrier_frequency: 38kHz
#       data: [ 4480,-4480,560,-1680,560,-560,560,-1680,560,-1680,560,-560,560,-560,560,-1680,560,-560,560,-560,560,-1680,560,-560,560,-560,560,-1680,560,-1680,560,-560,560,-1680,560,-560,560,-560,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-1680,560,-1680,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-5040,4480,-4480,560,-1680,560,-560,560,-1680,560,-1680,560,-560,560,-560,560,-1680,560,-560,560,-560,560,-1680,560,-560,560,-560,560,-1680,560,-1680,560,-560,560,-1680,560,-560,560,-560,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-1680,560,-1680,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-560,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-1680,560,-5040 ]

#   - platform: custom
#     lambda: |-
#       auto component = new CoolixComponent(id(ir_sender));
#       return {component->get_cmd(false, 0, 24),
#               component->get_cmd(true, kCoolixCool, 24)};
#     switches:
#       - name: "Turn Off AC"
#       - name: "Turn On AC Cool 24ºC"

custom_component:
  - id: ape
    lambda: |-
      auto ape_component = new ArduinoPortExtender(i2ccomponent, 0x08);
      return {ape_component};

output:
- platform: custom
  type: binary
  lambda: |-
    return {ape_binary_output(ape, 7),
            ape_binary_output(ape, 6),
            ape_binary_output(ape, 5),
            ape_binary_output(ape, 4)};
  outputs:
    - id: gpio_relay_1
      inverted: true
    - id: gpio_relay_2
      inverted: true
    - id: gpio_relay_3
      inverted: true
    - id: gpio_relay_4
      inverted: true

light:
  - platform: binary
    id: luz_estudio
    name: "Luz estudio"
    output: gpio_relay_1
  - platform: binary
    id: luz_pasillo
    name: "Luz pasillo"
    output: gpio_relay_2
  - platform: binary
    id: luz_banio
    name: "Luz baño"
    output: gpio_relay_3
  - platform: binary
    id: extractor_banio
    name: "Extractor baño"
    output: gpio_relay_4

binary_sensor:
  - platform: status
    name: "Estudio Status"
  - platform: custom
    lambda: |-
      return {ape_binary_sensor(ape, 2), // ribbon purple
              ape_binary_sensor(ape, 3), // ribbon white 
              ape_binary_sensor(ape, 8), // ribbon verde 
              ape_binary_sensor(ape, 15), // A1 ribbon orange
              ape_binary_sensor(ape, 13), // A1 ribbon orange
              ape_binary_sensor(ape, 14)}; // ribbon red 
    binary_sensors:
      - name: "Switch estudio puerta 1"
        internal: true
        on_state:
          then:
            - light.toggle: luz_estudio
      - name: "Switch estudio puerta 2"
        internal: true
        on_state:
          then:
            - light.toggle: luz_pasillo
      - name: "Switch estudio galeria 1"
        internal: true
        on_state:
          then:
            - light.toggle: luz_pasillo
      - name: "Switch estudio galeria 2"
        internal: true
        on_state:
          then:
            - light.toggle: luz_banio
      - name: "Switch estudio galeria 3"
        internal: true
        on_state:
          then:
            - light.toggle: luz_banio
      - name: "Switch estudio galeria 3"
        device_class: window

      

